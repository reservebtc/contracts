name: gas-snapshot

on:
  push:
    branches: [ main, feat/**, ci/**, test/** ]
    paths:
      - "src/**"
      - "test/Gas_Snapshots.t.sol"
      - ".github/workflows/gas-snapshot.yml"
      - "foundry.toml"
  pull_request:
    branches: [ main ]
    paths:
      - "src/**"
      - "test/Gas_Snapshots.t.sol"
      - ".github/workflows/gas-snapshot.yml"
      - "foundry.toml"
  workflow_dispatch:

permissions:
  contents: write  

jobs:
  gas:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
        
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Build
        run: forge build

      - name: Run gas tests and save report
        run: |
          set -eo pipefail
          forge test --match-contract Gas_Snapshots --gas-report -vv | tee gas-report.txt
          echo "---- report head ----"
          head -n 50 gas-report.txt || true
          echo "---- report tail ----"
          tail -n 50 gas-report.txt || true

      - name: Parse wrap/redeem from report
        id: parse
        shell: bash
        run: |
          set -eo pipefail

   
          WRAP=$(grep -E '^\|[[:space:]]*wrap[[:space:]]*\|' -m1 gas-report.txt | awk -F'|' '{gsub(/ /,"",$3); print $3}')

          REDEEM=$(awk 'f;/^\| src\/VaultWrBTC\.sol:VaultWrBTC Contract/{f=1}' gas-report.txt | \
                   grep -E '^\|[[:space:]]*redeem[[:space:]]*\|' -m1 | \
                   awk -F'|' '{gsub(/ /,"",$3); print $3}')

  
          [[ -z "$WRAP" ]] && WRAP=0
          [[ -z "$REDEEM" ]] && REDEEM=0

          echo "wrap_avg=$WRAP" >> $GITHUB_OUTPUT
          echo "redeem_avg=$REDEEM" >> $GITHUB_OUTPUT
          echo "Parsed wrap=$WRAP, redeem=$REDEEM"

      - name: Update README badges
        shell: bash
        run: |
          set -eo pipefail

          WRAP="${{ steps.parse.outputs.wrap_avg }}"
          REDEEM="${{ steps.parse.outputs.redeem_avg }}"

     
          WRAP_BADGE="![Gas Wrap](https://img.shields.io/badge/gas%20wrap-${WRAP}-blue)"
          REDEEM_BADGE="![Gas Redeem](https://img.shields.io/badge/gas%20redeem-${REDEEM}-green)"

    
          if grep -qE 'gas%20wrap-[0-9]+' README.md; then
            sed -i -E "s#(gas%20wrap-)[0-9]+#\\1${WRAP}#g" README.md
          fi
          if grep -qE 'gas%20redeem-[0-9]+' README.md; then
            sed -i -E "s#(gas%20redeem-)[0-9]+#\\1${REDEEM}#g" README.md
          fi

      
          if ! grep -q 'gas%20wrap-' README.md; then
            tmp=$(mktemp)
            { echo "${WRAP_BADGE} ${REDEEM_BADGE}"; echo; cat README.md; } > "$tmp"
            mv "$tmp" README.md
          fi

          echo "README updated (wrap=${WRAP}, redeem=${REDEEM})."

      - name: Commit & push badge update (push events only)
        if: github.event_name == 'push'
        shell: bash
        run: |
          set -eo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          if ! git diff --quiet -- README.md; then
            git add README.md
            git commit -m "chore(gas): update gas badges (wrap=${{ steps.parse.outputs.wrap_avg }}, redeem=${{ steps.parse.outputs.redeem_avg }})"
            git push
          else
            echo "No README changes to commit."
          fi

      - name: Upload gas report artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: gas-report
          path: gas-report.txt
