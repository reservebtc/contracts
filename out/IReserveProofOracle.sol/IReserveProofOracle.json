{"abi":[{"type":"function","name":"isBacked","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lastVerifiedRound","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"merkleRoot","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"verifiedTotalSats","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"verifyBinding","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"btcAddressBytes","type":"bytes","internalType":"bytes"},{"name":"merkleProof","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"isBacked(address)":"dc1520cc","lastVerifiedRound(address)":"aa5cdef5","merkleRoot()":"2eb4a7ab","verifiedTotalSats(address)":"ec5a3848","verifyBinding(address,bytes,bytes32[])":"98fb3358"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isBacked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"lastVerifiedRound\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"verifiedTotalSats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"btcAddressBytes\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyBinding\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isBacked(address)\":{\"params\":{\"user\":\"EVM address of the user.\"},\"returns\":{\"_0\":\"True if the account is fully backed 1:1.\"}},\"verifyBinding(address,bytes,bytes32[])\":{\"params\":{\"btcAddressBytes\":\"Raw BTC address bytes as provided during verification.\",\"merkleProof\":\"Merkle proof from leaf to the stored Merkle root.\",\"user\":\"EVM address of the user.\"},\"returns\":{\"_0\":\"True if the binding is valid.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isBacked(address)\":{\"notice\":\"Quick 1:1 check that issued synthetic equals the verified BTC reserve.\"},\"lastVerifiedRound(address)\":{\"notice\":\"Last verification round/index for the user (0 if unused).\"},\"merkleRoot()\":{\"notice\":\"Merkle root for leaves hashed as keccak(user, keccak(btcAddressBytes)).\"},\"verifiedTotalSats(address)\":{\"notice\":\"Current verified total for a user (free + escrow), denominated in satoshis.\"},\"verifyBinding(address,bytes,bytes32[])\":{\"notice\":\"Verifies user \\u2194 BTC address binding via a Merkle proof.\"}},\"notice\":\"Read-only facade for DeFi integrators.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/IReserveProofOracle.sol\":\"IReserveProofOracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/IReserveProofOracle.sol\":{\"keccak256\":\"0x9d414f0df0201e7818173a52934a591a6a70f16180a01d715d31117401eae6a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cbf44a4fd0e13356fd92db687bcb22114beff715e3b9e5ab2fc306488514b9c\",\"dweb:/ipfs/QmWHEmEHJCAj3jQbGbdf6HqKfEnGW25HPpQezMEawwr4uu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"isBacked","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"lastVerifiedRound","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"verifiedTotalSats","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bytes","name":"btcAddressBytes","type":"bytes"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"verifyBinding","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"isBacked(address)":{"params":{"user":"EVM address of the user."},"returns":{"_0":"True if the account is fully backed 1:1."}},"verifyBinding(address,bytes,bytes32[])":{"params":{"btcAddressBytes":"Raw BTC address bytes as provided during verification.","merkleProof":"Merkle proof from leaf to the stored Merkle root.","user":"EVM address of the user."},"returns":{"_0":"True if the binding is valid."}}},"version":1},"userdoc":{"kind":"user","methods":{"isBacked(address)":{"notice":"Quick 1:1 check that issued synthetic equals the verified BTC reserve."},"lastVerifiedRound(address)":{"notice":"Last verification round/index for the user (0 if unused)."},"merkleRoot()":{"notice":"Merkle root for leaves hashed as keccak(user, keccak(btcAddressBytes))."},"verifiedTotalSats(address)":{"notice":"Current verified total for a user (free + escrow), denominated in satoshis."},"verifyBinding(address,bytes,bytes32[])":{"notice":"Verifies user â†” BTC address binding via a Merkle proof."}},"version":1}},"settings":{"remappings":["ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/IReserveProofOracle.sol":"IReserveProofOracle"},"evmVersion":"cancun","libraries":{}},"sources":{"src/IReserveProofOracle.sol":{"keccak256":"0x9d414f0df0201e7818173a52934a591a6a70f16180a01d715d31117401eae6a4","urls":["bzz-raw://1cbf44a4fd0e13356fd92db687bcb22114beff715e3b9e5ab2fc306488514b9c","dweb:/ipfs/QmWHEmEHJCAj3jQbGbdf6HqKfEnGW25HPpQezMEawwr4uu"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/IReserveProofOracle.sol","id":47,"exportedSymbols":{"IReserveProofOracle":[46]},"nodeType":"SourceUnit","src":"32:1325:0","nodes":[{"id":1,"nodeType":"PragmaDirective","src":"32:24:0","nodes":[],"literals":["solidity","^","0.8",".23"]},{"id":46,"nodeType":"ContractDefinition","src":"109:1247:0","nodes":[{"id":8,"nodeType":"FunctionDefinition","src":"233:54:0","nodes":[],"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"145:83:0","text":"@notice Merkle root for leaves hashed as keccak(user, keccak(btcAddressBytes))."},"functionSelector":"2eb4a7ab","implemented":false,"kind":"function","modifiers":[],"name":"merkleRoot","nameLocation":"242:10:0","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"252:2:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8,"src":"278:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5,"name":"bytes32","nodeType":"ElementaryTypeName","src":"278:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"277:9:0"},"scope":46,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16,"nodeType":"FunctionDefinition","src":"385:73:0","nodes":[],"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"293:87:0","text":"@notice Current verified total for a user (free + escrow), denominated in satoshis."},"functionSelector":"ec5a3848","implemented":false,"kind":"function","modifiers":[],"name":"verifiedTotalSats","nameLocation":"394:17:0","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"user","nameLocation":"420:4:0","nodeType":"VariableDeclaration","scope":16,"src":"412:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"412:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"411:14:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"449:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"449:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"448:9:0"},"scope":46,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":24,"nodeType":"FunctionDefinition","src":"538:72:0","nodes":[],"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"464:69:0","text":"@notice Last verification round/index for the user (0 if unused)."},"functionSelector":"aa5cdef5","implemented":false,"kind":"function","modifiers":[],"name":"lastVerifiedRound","nameLocation":"547:17:0","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"user","nameLocation":"573:4:0","nodeType":"VariableDeclaration","scope":24,"src":"565:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"565:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"564:14:0"},"returnParameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24,"src":"602:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":21,"name":"uint64","nodeType":"ElementaryTypeName","src":"602:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"601:8:0"},"scope":46,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37,"nodeType":"FunctionDefinition","src":"944:154:0","nodes":[],"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"616:323:0","text":"@notice Verifies user â†” BTC address binding via a Merkle proof.\n @param user EVM address of the user.\n @param btcAddressBytes Raw BTC address bytes as provided during verification.\n @param merkleProof Merkle proof from leaf to the stored Merkle root.\n @return True if the binding is valid."},"functionSelector":"98fb3358","implemented":false,"kind":"function","modifiers":[],"name":"verifyBinding","nameLocation":"953:13:0","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"user","nameLocation":"975:4:0","nodeType":"VariableDeclaration","scope":37,"src":"967:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"btcAddressBytes","nameLocation":"996:15:0","nodeType":"VariableDeclaration","scope":37,"src":"981:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":28,"name":"bytes","nodeType":"ElementaryTypeName","src":"981:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"merkleProof","nameLocation":"1032:11:0","nodeType":"VariableDeclaration","scope":37,"src":"1013:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1013:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":31,"nodeType":"ArrayTypeName","src":"1013:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"966:78:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":37,"src":"1092:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":34,"name":"bool","nodeType":"ElementaryTypeName","src":"1092:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1091:6:0"},"scope":46,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":45,"nodeType":"FunctionDefinition","src":"1293:61:0","nodes":[],"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"1104:184:0","text":"@notice Quick 1:1 check that issued synthetic equals the verified BTC reserve.\n @param user EVM address of the user.\n @return True if the account is fully backed 1:1."},"functionSelector":"dc1520cc","implemented":false,"kind":"function","modifiers":[],"name":"isBacked","nameLocation":"1302:8:0","parameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"user","nameLocation":"1319:4:0","nodeType":"VariableDeclaration","scope":45,"src":"1311:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":39,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1310:14:0"},"returnParameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":45,"src":"1348:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":42,"name":"bool","nodeType":"ElementaryTypeName","src":"1348:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1347:6:0"},"scope":46,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IReserveProofOracle","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"58:51:0","text":"@notice Read-only facade for DeFi integrators."},"fullyImplemented":false,"linearizedBaseContracts":[46],"name":"IReserveProofOracle","nameLocation":"119:19:0","scope":47,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":0}