{"abi":[{"type":"function","name":"isBacked","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lastVerifiedRound","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"merkleRoot","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"verifiedTotalSats","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"verifyBinding","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"btcAddressBytes","type":"bytes","internalType":"bytes"},{"name":"merkleProof","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"isBacked(address)":"dc1520cc","lastVerifiedRound(address)":"aa5cdef5","merkleRoot()":"2eb4a7ab","verifiedTotalSats(address)":"ec5a3848","verifyBinding(address,bytes,bytes32[])":"98fb3358"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isBacked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"lastVerifiedRound\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"verifiedTotalSats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"btcAddressBytes\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyBinding\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isBacked(address)\":{\"params\":{\"user\":\"EVM address of the user.\"},\"returns\":{\"_0\":\"True if the account is fully backed 1:1.\"}},\"verifyBinding(address,bytes,bytes32[])\":{\"params\":{\"btcAddressBytes\":\"Raw BTC address bytes as provided during verification.\",\"merkleProof\":\"Merkle proof from leaf to the stored Merkle root.\",\"user\":\"EVM address of the user.\"},\"returns\":{\"_0\":\"True if the binding is valid.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isBacked(address)\":{\"notice\":\"Quick 1:1 check that issued synthetic equals the verified BTC reserve.\"},\"lastVerifiedRound(address)\":{\"notice\":\"Last verification round/index for the user (0 if unused).\"},\"merkleRoot()\":{\"notice\":\"Merkle root for leaves hashed as keccak(user, keccak(btcAddressBytes)).\"},\"verifiedTotalSats(address)\":{\"notice\":\"Current verified total for a user (free + escrow), denominated in satoshis.\"},\"verifyBinding(address,bytes,bytes32[])\":{\"notice\":\"Verifies user \\u2194 BTC address binding via a Merkle proof.\"}},\"notice\":\"Read-only facade for DeFi integrators.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/IReserveProofOracle.sol\":\"IReserveProofOracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/IReserveProofOracle.sol\":{\"keccak256\":\"0xe2b0e4abbbbde59c03a0785ca0ae48e418425c8b0aa93c92d435f674dff18962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e342f90c36be602cae63fdfc19326bb73d8c550765cfab83f5a9f58545dcf71e\",\"dweb:/ipfs/QmQjizCwj33hZKBUuH11g2jjCRcdQDdE2YXxXrBu1rbYGz\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"isBacked","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"lastVerifiedRound","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"verifiedTotalSats","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bytes","name":"btcAddressBytes","type":"bytes"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"verifyBinding","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"isBacked(address)":{"params":{"user":"EVM address of the user."},"returns":{"_0":"True if the account is fully backed 1:1."}},"verifyBinding(address,bytes,bytes32[])":{"params":{"btcAddressBytes":"Raw BTC address bytes as provided during verification.","merkleProof":"Merkle proof from leaf to the stored Merkle root.","user":"EVM address of the user."},"returns":{"_0":"True if the binding is valid."}}},"version":1},"userdoc":{"kind":"user","methods":{"isBacked(address)":{"notice":"Quick 1:1 check that issued synthetic equals the verified BTC reserve."},"lastVerifiedRound(address)":{"notice":"Last verification round/index for the user (0 if unused)."},"merkleRoot()":{"notice":"Merkle root for leaves hashed as keccak(user, keccak(btcAddressBytes))."},"verifiedTotalSats(address)":{"notice":"Current verified total for a user (free + escrow), denominated in satoshis."},"verifyBinding(address,bytes,bytes32[])":{"notice":"Verifies user â†” BTC address binding via a Merkle proof."}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/IReserveProofOracle.sol":"IReserveProofOracle"},"evmVersion":"cancun","libraries":{}},"sources":{"src/IReserveProofOracle.sol":{"keccak256":"0xe2b0e4abbbbde59c03a0785ca0ae48e418425c8b0aa93c92d435f674dff18962","urls":["bzz-raw://e342f90c36be602cae63fdfc19326bb73d8c550765cfab83f5a9f58545dcf71e","dweb:/ipfs/QmQjizCwj33hZKBUuH11g2jjCRcdQDdE2YXxXrBu1rbYGz"],"license":"MIT"}},"version":1},"id":19}